.globl main
main:
    pushq %rbp
    movq %rsp, %rbp
    movq $16384, %rdi
    movq $16, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    movq $0, 0(%r15)
    addq $8, 0(%r15)
    movq $0, 0(%r15)
    addq $8, 0(%r15)
    movq $0, 0(%r15)
    addq $8, 0(%r15)
    jmp start
start:
    movq free_ptr(%rip), %rsi
    addq $24, %rsi
    cmpq fromspace_end(%rip), %rsi
    jl label_369
    jmp label_368
label_368:
    movq %r15, %rdi
    movq $24, %rsi
    callq collect
    jmp label_369
label_369:
    movq free_ptr(%rip), %rax
    movq %rax, -8(%r15)
    addq $24, free_ptr(%rip)
    movq -8(%r15), %r11
    movq $5, 0(%r11)
    movq -8(%r15), %r11
    movq $42, 8(%r11)
    movq -8(%r15), %r11
    movq $2, 16(%r11)
    movq free_ptr(%rip), %rsi
    addq $24, %rsi
    cmpq fromspace_end(%rip), %rsi
    jl label_372
    jmp label_371
label_371:
    movq %r15, %rdi
    movq $24, %rsi
    callq collect
    jmp label_372
label_372:
    movq free_ptr(%rip), %rsi
    addq $24, free_ptr(%rip)
    movq %rsi, %r11
    movq $773, 0(%r11)
    movq %rsi, %r11
    movq -8(%r15), %rax
    movq %rax, 8(%r11)
    movq %rsi, %r11
    movq -8(%r15), %rax
    movq %rax, 16(%r11)
    movq free_ptr(%rip), %rbx
    addq $24, %rbx
    cmpq fromspace_end(%rip), %rbx
    jl label_375
    jmp label_374
label_374:
    movq %r15, %rdi
    movq $24, %rsi
    callq collect
    jmp label_375
label_375:
    movq free_ptr(%rip), %rax
    movq %rax, -16(%r15)
    addq $24, free_ptr(%rip)
    movq -16(%r15), %r11
    movq $261, 0(%r11)
    movq -16(%r15), %r11
    movq $3, 8(%r11)
    movq -16(%r15), %r11
    movq %rsi, 16(%r11)
    movq free_ptr(%rip), %rsi
    addq $24, %rsi
    cmpq fromspace_end(%rip), %rsi
    jl label_378
    jmp label_377
label_377:
    movq %r15, %rdi
    movq $24, %rsi
    callq collect
    jmp label_378
label_378:
    movq free_ptr(%rip), %rsi
    addq $24, free_ptr(%rip)
    movq %rsi, %r11
    movq $773, 0(%r11)
    movq %rsi, %r11
    movq -16(%r15), %rax
    movq %rax, 8(%r11)
    movq %rsi, %r11
    movq -8(%r15), %rax
    movq %rax, 16(%r11)
    movq %rsi, %r11
    movq 8(%r11), %rsi
    movq %rsi, %r11
    movq 16(%r11), %rsi
    movq %rsi, %r11
    movq 8(%r11), %rsi
    movq %rsi, %r11
    movq 8(%r11), %rsi
    movq %rsi, %rdi
    callq print_int
    jmp conclusion
conclusion:
    movq $0, %rax
    popq %rbp
    retq


